


Testes Automatizados Cypress







Para que serve testes automatizados ?


Os testes automatizados são uma prática comum no desenvolvimento de software moderno. Eles são uma forma de testar uma aplicação para garantir que as mudanças realizadas não afetem negativamente as funcionalidades existentes. 
Em vez de realizar testes manuais repetitivos, automatizar os testes de regressão permite que desenvolvedores e testadores se concentrem em tarefas mais críticas e reduzam o tempo necessário para testar uma aplicação.




Introdução ao Cypress

O Cypress é uma ferramenta de testes end-to-end (E2E) moderna, desenvolvida para tornar os testes de frontend mais rápidos, fáceis e confiáveis. 
Ele permite a escrita de testes em JavaScript, tornando-os acessíveis para desenvolvedores web.

O Cypress serve para automatizar e validar o comportamento de aplicações web. Ele permite aos desenvolvedores escrever, executar e depurar testes automatizados que simulam interações do usuário, como cliques, preenchimento de formulários e navegação entre páginas. 
Com o Cypress, é possível testar cenários complexos e realistas, garantindo que todas as funcionalidades da aplicação estejam funcionando corretamente.


Cypress possui uma documentação extensa e bem explicada, o que facilita no entedimento.
Diferente de outras ferramentas que requerem múltiplas camadas de configuração e integração (como Selenium), o Cypress tem uma arquitetura integrada, que é integrada no momento que é criado o primeiro Teste.



Como ele funciona ?

O Cypress executa os testes diretamente no navegador, o que proporciona uma execução extremamente rápida. 
Ele controla totalmente o navegador, permitindo a simulação de interações de usuário de forma mais precisa e confiável.


Para executar o teste, você pode usar linhas de comando simples como [npx cypress open] para executar o teste com modo de exibição, e para executa-lo sem exibição se utiliza [npx cypress run]


Jenkins e Cypress

O Cypress pode ser integrado ao Jenkins para automatizar a execução de testes em pipelines de integração contínua (CI). 
A integração entre o Cypress e o Jenkins permite que os testes automatizados sejam executados automaticamente em cada build do projeto, fornecendo feedback rápido sobre a qualidade do código. 
Essa integração entre o Cypress e o Jenkins permite automatizar o processo de teste de software, garantindo que os testes sejam executados de forma consistente e confiável em cada build do projeto. 
Isso ajuda a identificar problemas precocemente, melhorando a qualidade do software e acelerando o ciclo de desenvolvimento.


O que pode ser validado por meio de automação ?


Atualmente, nossa bateria de testes automáticos abrange diversas áreas críticas da aplicação, incluindo as telas de Dashboard, Vendas, Pagamentos, Taxa e Conciliação bancária. 
Esses testes são projetados para validar a consistência e a funcionalidade dos elementos e componentes presentes nessas telas. Eles garantem não apenas a disponibilidade de downloads e a exibição correta de valores, mas também a integridade geral da experiência do usuário. 
Ao realizar esses testes, asseguramos que nossa aplicação ofereça qualidade e consistência em todas as interações, proporcionando uma experiência confiável aos nossos usuários.

Com o Cypress e sua robusta biblioteca, alcançamos um alto nível de assertividade ao validar nossos sistemas, o que nos permite criar uma variedade de testes e incorporá-los cada vez mais em nossas práticas diárias. 
Isso resulta em publicações mais confiáveis e consistentes.



That's it. 
Com o Cypress integrado ao nosso fluxo de trabalho, estamos preparados para garantir qualidade e eficiência em cada etapa do desenvolvimento.





Correções 

O que pode ser validado
por meio de automação?

Testes automáticos é usado como meio de teste de regressão,



Testes automatizados: quando e por que utilizar?


Os Testes automatizados traz além de tudo aumento na eficiencia e agilidade na entrega. Em vez de esperar em fila para que a equipe de teste especializada chegue até o produto, um desenvolvedor, por exemplo, pode rodar os testes automatizados simultaneamente. Isso não apenas acelera o ciclo de desenvolvimento do produto, mas também garante um tempo mais curto até o lançamento, uma vantagem crucial em um cenário que precisa de entregas rápidas e com eficiencia.

A automação de testes trás uma perspectiva diversa para o processo, descobrindo problemas ou bugs que uma equipe poderia deixar passar. Essa diversidade na abordagem de testes inevitavelmente resulta em um produto mais robusto e de alta qualidade.


Os testes E2E simulam uma experiência de nível de usuário em toda a pilha de um produto de software. Planos de testes E2E em geral abrangem histórias de nível de usuário como: “o usuário falhou no Login”, “o usuário quer exportar via PDF na tela Pagamentos Confirmados ” ou “o usuário está conseguindo visualizar todos os menus que são apresentados normalmente ”, esses testes procuram avaliar se alterações feitas pelos desenvolvedores afetaram os usuários. A implementação desses testes é muito valiosa, pois eles oferecem garantia de que os usuários reais estão tendo uma experiência sem bugs, mesmo quando novos commits são enviados.

[Pagina 1 ]
introdução

[Pagina 2 ]
Testes automatizados: quando e por que utilizar?

Em um mundo atual em que a agilidade e entrega com eficiência são valiosas, os testes automáticos estão se tornando cada vez mais cruciais na Qualidade de Software. Isso porque evitam que os profissionais responsáveis pela qualidade se sobrecarreguem, permitindo que eles possam se concentrar em testes específicos enquanto os testes de regressão são realizados pelos testes automatizados.

Os Testes automatizados traz além de tudo aumento na eficiencia e agilidade na entrega. Em vez de esperar em fila para que a equipe de teste especializada chegue até o produto, um desenvolvedor, por exemplo, pode rodar os testes automatizados simultaneamente. Isso não apenas acelera o ciclo de desenvolvimento do produto, mas também garante um tempo mais curto até o lançamento, uma vantagem crucial em um cenário que precisa de entregas rápidas e com eficiencia.

A automação de testes trás uma perspectiva diversa para o processo, descobrindo problemas ou bugs que uma equipe poderia deixar passar. Essa diversidade na abordagem de testes inevitavelmente resulta em um produto mais robusto e de alta qualidade.


[Pagina 3 ]

O que é o Cypress ?

O Cypress é uma ferramenta de testes end-to-end
(E2E) moderna, desenvolvida para tornar os testes
de frontend mais rápidos, fáceis e confiáveis.
Ele permite a escrita de testes em JavaScript,
tornando-os acessíveis para desenvolvedores web.
O Cypress serve para automatizar e validar o
comportamento de aplicações web. Ele permite aos
desenvolvedores escrever, executar e depurar testes
automatizados que simulam interações do usuário,
como cliques, preenchimento de formulários e
navegação entre páginas


[Página 4]

Com o Cypress, é possível testar cenários complexos e
realistas, garantindo que todas as funcionalidades da
aplicação estejam funcionando corretamente.
Cypress possui uma documentação extensa e bem
explicada, o que facilita no entedimento.
Diferente de outras ferramentas que requerem múltiplas
camadas de configuração e integração (como Selenium),
o Cypress tem uma arquitetura integrada, que é
integrada no momento que é criado o primeiro Teste. 


[Página 5]

Como o Cypress funciona ?

O Cypress executa os testes diretamente no
navegador, o que proporciona uma execução
extremamente rápida.
Ele controla totalmente o navegador,
permitindo a simulação de interações de
usuário de forma mais precisa e confiável.

Para executar o teste, você pode usar linhas
de comando simples como "npx cypress
open" para executar o teste com modo de
exibição, e para executa-lo sem exibição se
utiliza "npx cypress run"


[Página 6]

Quais são os cenários que podem ser avaliados em testes e2e? 

Os testes E2E simulam uma experiência de nível de usuário em toda a pilha de um produto de software. Planos de testes E2E em geral abrangem histórias de nível de usuário como: “o usuário falhou no Login”, “o usuário quer exportar via PDF na tela Pagamentos Confirmados ” ou “o usuário está conseguindo visualizar todos os menus que são apresentados normalmente ”, esses testes procuram avaliar se alterações feitas pelos desenvolvedores afetaram os usuários. A implementação desses testes é muito valiosa, pois eles oferecem garantia de que os usuários reais estão tendo uma experiência sem bugs, mesmo quando novos commits são enviados.

[Página 7]

Ao realizar esses testes, asseguramos que nossa
aplicação ofereça qualidade e consistência em
todas as interações, proporcionando uma
experiência confiável aos nossos usuários.
Com o Cypress e sua robusta biblioteca,
alcançamos um alto nível de assertividade ao
validar nossos sistemas, o que nos permite criar
uma variedade de testes e incorporá-los cada
vez mais em nossas práticas diárias.
Isso resulta em publicações mais
confiáveis e consistentes. 


[Página 8]
That's it !

Com o Cypress integrado ao nosso
fluxo de trabalho, estamos preparados
para garantir qualidade e eficiência
em cada etapa do desenvolvimento.

[Página 9]

Muito Obrigado





Por que usar  ?


.Execução Rápida e Confiável:

O Cypress executa os testes diretamente no navegador, o que proporciona uma execução extremamente rápida. Ele controla totalmente o navegador, permitindo a simulação de interações de usuário de forma mais precisa e confiável.


.Depuração Facilitada: 

Uma das grandes vantagens do Cypress é a facilidade de depuração. 
Ele captura screenshots da aplicação em diferentes estágios de execução dos testes, permitindo que os desenvolvedores vejam exatamente o que aconteceu em cada passo. 
Isso torna a identificação e correção de erros muito mais simples.

Rapidez na construção de testes: 
O Cypress recarrega automaticamente os testes em tempo real sempre que você salva um arquivo. 
Isso permite que os desenvolvedores vejam instantaneamente os resultados das alterações no código, tornando o processo de escrita de testes muito mais ágil e eficiente.


Eficiencia e Segurança:

A integração dos testes automatizados do Cypress no Jenkins nos permite detectar proativamente problemas e bugs no site antes que cheguem aos usuários finais. 
Isso ajuda a evitar interrupções no serviço e a garantir uma experiência consistente para os usuários.



Com a integração dos testes no pipeline de CI/CD, é possível garantir que cada release passe por uma validação rigorosa, minimizando o risco de introdução de bugs em produção.





