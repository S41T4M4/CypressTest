                      Testes automáticos: Selenium e Cypress

Primeiras impressões: 

Cypress tem uma sintaxe mais intuitiva o que deixa mais facil para maior compreensão,

Os testes são executados no mesmo processo que o navegador, o que deixa uma execução mais rapida

O Cypress fornece uma visão em tempo real do DOM durante a execução do teste, o que entregar maior agilidade ao teste.

Não é necessário adicionar comandos de espera explícitos ou implícitos em scripts de teste, ao contrário do Selenium. Cypress espera automaticamente por comandos e afirmações, o que evita alguns "Erros" que ocorriam no selenium, por alguma demora inesperada.

À medida que você escreve comandos, o Cypress os executa em tempo real, fornecendo feedback visual à medida que são executados

Não se pode usar o cypress para reproduzir dois navegadores ao mesmo tempo 

Apos varias execuções do teste criado, foi apresentado incosistencia na execução , onde em algums momentos o teste é executado com rapidez mas multiplas vezes é executado com erro devido a uma demora exorbitante ou nem mesmo carregar
 
 

 Em cypress você pode programar para que x se apresente na tela você executa determinada ação , então se x não está na tela é um erro,
mas nos testes automaticos que foram feitos no selenium, tenho que tratar algumas condições de outras maneiras, exemplo: 
"Se o refo já estiver selecionado, é apagado e selecionado o refo "33292", se não, é apenas colocado o refo sem ter que apagar o atual."
Em Cypress, se uma condição não for esperada, essa condição é considerada um erro, isso resulta em procurar outras medidas para lidar com esse acontecimento , o que deixa o código com menos objetividade.


 O Selenium WebDriver fornece vários métodos para localizar elementos na página, como localização por ID, nome, classe, XPath, CSS, entre outros, oferecendo flexibilidade na automação que em cypresse não ocorre, é utilizado apenas o css selector ou id 

 




